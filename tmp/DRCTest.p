#ifndef _DRCTest_p
#define _DRCTest_p
/* #pragma message in DRCTest.p */

/*
 * Prototype file (DRCTest.p) corresponding to DRCTest.cpp 
 * (Generated by $Id: DRCTest.p,v 1.21 2011-03-14 16:47:39-04 alan Exp alan $)
 *
 */

/* #ifdef __BCPLUSPLUS__ */
/* #pragma message C++ */
  extern "C" {
    bool MatchArg(const char *flag,char *arg);
    void TestAndCall(int &idx,int argc,char **argv,int (*func)(char **argv));
    int Cmd_SetMaxLines(char** arglist);
    int Cmd_SetErrTtlMult(char** arglist);
    int Cmd_SetErrThreshold(char** arglist);
    int Cmd_CheckACTSFiles(char** arglist);
    int Cmd_CheckRTFiles(char** arglist);
    int Cmd_CheckSTATSFiles(char** arglist);
    int Cmd_CheckParamFiles(char** arglist);
    int Cmd_OutputFile(char** arglist);
    int Cmd_DisplayHelp(char** arglist);
    int Cmd_SetDirectories(char** arglist);
    void ProcessCmdLineArgs(int argc,char **argv);
    void ProcessACTSFiles(FILE* fh);
    char* Trim(char* str);
    unsigned int CalcCRC(char* str);
    void BuildCRCStr(t_CRCStr& CRCStr,char* str);
    void ClearACTSTotals(void);
    void SaveACTSTotals(char *fn,char *str,bool Old);
    void PrtACTSTotalHdr(void);
    void DumpACTSTotals(void);
    void CompareACTS(FILE* fh,char* OldName,char* NewName);
    void PrintACTSDiff(FILE* fh,t_LCS* lcs,vector<t_CRCStr> &Old,vector<t_CRCStr> &New, int i,int j,int start,bool (*CmpFnc)(t_CRCStr&,t_CRCStr&));
    bool CmpCRCStr(t_CRCStr& Old,t_CRCStr& New);
    t_LCS* LCSFileLines(vector<t_CRCStr> &Old,vector<t_CRCStr> &New,bool (*CmpFnc)(t_CRCStr&,t_CRCStr&));
    void ExecACTSCompare(FILE* fh,char* OldName,char* NewName);
    void ExecLCSDiff(FILE* fh,t_LCS* lcs,vector<char*> &Old,vector<char*> &New, int i,int j,int start);
    void PrintLCSDiff(FILE* fh,t_LCS* lcs,vector<char*> &Old,vector<char*> &New, int i,int j,int start);
    void PrintLCSTable(FILE* fh,t_LCS* lcs);
    int* INDEX(int* Table,int r,int c,int RowSz);
    t_LCS* LCSFileNames(vector<char*> &Old,vector<char*> &New);
    void ProcessRTFiles(FILE* fh);
    void PrintFileDiff(FILE* fh,t_LCS* lcs,vector<char*> &Old,vector<char*> &New, int i,int j,int start,bool (*CmpFnc)(char*,char*));
    t_LCS* LCSStrLines(vector<char*> &Old,vector<char*> &New,bool (*CmpFnc)(char*,char*));
    bool CmpStr(char* Old,char* New);
    void ProcessSTATSFiles(FILE* fh);
    void ProcessParamFiles(FILE* fh);
    int dualfpf(FILE*fh,char *fmt, ...);
  }
/* #else */
/* #pragma message C */
/*     extern bool MatchArg(char *flag,char *arg); */
/*     extern void TestAndCall(int &idx,int argc,char **argv,int (*func)(char **argv)); */
/*     extern int Cmd_SetMaxLines(char** arglist); */
/*     extern int Cmd_SetErrTtlMult(char** arglist); */
/*     extern int Cmd_SetErrThreshold(char** arglist); */
/*     extern int Cmd_CheckACTSFiles(char** arglist); */
/*     extern int Cmd_CheckRTFiles(char** arglist); */
/*     extern int Cmd_CheckSTATSFiles(char** arglist); */
/*     extern int Cmd_CheckParamFiles(char** arglist); */
/*     extern int Cmd_OutputFile(char** arglist); */
/*     extern int Cmd_DisplayHelp(char** arglist); */
/*     extern int Cmd_SetDirectories(char** arglist); */
/*     extern void ProcessCmdLineArgs(int argc,char **argv); */
/*     extern void ProcessACTSFiles(FILE* fh); */
/*     extern char* Trim(char* str); */
/*     extern unsigned int CalcCRC(char* str); */
/*     extern void BuildCRCStr(t_CRCStr& CRCStr,char* str); */
/*     extern void ClearACTSTotals(void); */
/*     extern void SaveACTSTotals(char *fn,char *str,bool Old); */
/*     extern void PrtACTSTotalHdr(void); */
/*     extern void DumpACTSTotals(void); */
/*     extern void CompareACTS(FILE* fh,char* OldName,char* NewName); */
/*     extern void PrintACTSDiff(FILE* fh,t_LCS* lcs,vector<t_CRCStr> &Old,vector<t_CRCStr> &New, int i,int j,int start,bool (*CmpFnc)(t_CRCStr&,t_CRCStr&)); */
/*     extern bool CmpCRCStr(t_CRCStr& Old,t_CRCStr& New); */
/*     extern t_LCS* LCSFileLines(vector<t_CRCStr> &Old,vector<t_CRCStr> &New,bool (*CmpFnc)(t_CRCStr&,t_CRCStr&)); */
/*     extern void ExecACTSCompare(FILE* fh,char* OldName,char* NewName); */
/*     extern void ExecLCSDiff(FILE* fh,t_LCS* lcs,vector<char*> &Old,vector<char*> &New, int i,int j,int start); */
/*     extern void PrintLCSDiff(FILE* fh,t_LCS* lcs,vector<char*> &Old,vector<char*> &New, int i,int j,int start); */
/*     extern void PrintLCSTable(FILE* fh,t_LCS* lcs); */
/*     extern int* INDEX(int* Table,int r,int c,int RowSz); */
/*     extern t_LCS* LCSFileNames(vector<char*> &Old,vector<char*> &New); */
/*     extern void ProcessRTFiles(FILE* fh); */
/*     extern void PrintFileDiff(FILE* fh,t_LCS* lcs,vector<char*> &Old,vector<char*> &New, int i,int j,int start,bool (*CmpFnc)(char*,char*)); */
/*     extern t_LCS* LCSStrLines(vector<char*> &Old,vector<char*> &New,bool (*CmpFnc)(char*,char*)); */
/*     extern bool CmpStr(char* Old,char* New); */
/*     extern void ProcessSTATSFiles(FILE* fh); */
/*     extern void ProcessParamFiles(FILE* fh); */
/*     extern int dualfpf(FILE*fh,char *fmt, ...); */
/* #endif */

/*
 * End of file DRCTest.p 
 */
#endif //_DRCTest_p
